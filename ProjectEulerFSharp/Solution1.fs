namespace ProjectEulerFSharp

open System
open ProjectEulerCore.Infrastructure

[<Problem(1, "Add all the natural numbers below one thousand that are multiples of 3 or 5.")>]
type Solution1 =
    new() = { }
    
    // brute force O(n) techniques:

    member this.SolveBruteForce() =
        // sum the numbers generated by the sequence comprehension
        Seq.sum(seq { for x in 1 .. 999 do if (x % 3 = 0) || (x % 5 = 0) then yield x })
         
    member this.SolveBruteForce2() =
        // pipe number range sequence into Seq.sumBy which sums the results
        // generated by applying a "divisible by 3 or 5" filter projection
        { 1 .. 999 } |> Seq.sumBy (fun x -> if (x % 3 = 0) || (x % 5 = 0) then x else 0)
